# Rime schema
# vim: set sw=2 sts=2 et:
# encoding: utf-8

schema:
  schema_id: tlpa_peh_ue
  name: 河洛白話
  version: "0.1.0.0"
  author:
    - 居正中 <alanjui.1960@gmail.com>
  description: |
    河洛話白話音
    採用「TLPA標音方案」

switches:
  - name: ascii_mode
    reset: 0
    states: [漢文, ABC]
  - name: full_shape
    reset: 0
    states: [半形, 全形]

engine:
  processors:
    - ascii_composer
    - recognizer
    - key_binder
    - speller
    - punctuator
    - selector
    - navigator
    - express_editor
    # - fluency_editor
  segmentors:
    - ascii_segmentor
    - matcher
    - abc_segmentor
    - punct_segmentor
    - fallback_segmentor
  translators:
    - echo_translator
    - punct_translator
    # - r10n_translator
    - script_translator
    - reverse_lookup_translator
  filters:
    - simplifier
    - uniquifier

speller:
  #------------------------------------------------------
  # 定義使用者按下鍵盤時，輸入法能接受的按鍵
  #------------------------------------------------------
  # 1: ;
  # 2: \
  # 3: <
  # 4: [
  # 5: /
  # 6: 9
  # 7: -
  # 8: .
  # 0: 0
  alphabet: 'abcdefghijklmnopqrstuvwxyz~;\</9-.[0'
  initials: "abcdefghijklmnopqrstuvwxyz"
  finals: ';\</9-.[0'
  delimiter: " '"
  algebra:
    #------------------------------------------------------
    # 前置處理
    #------------------------------------------------------
    # 去除零聲母
    - derive/Ø//
    - xform/ts/c/	  # 可用羅馬拼音
    #------------------------------------------------------------------
    # 定義【地方腔】與【優勢腔】相容之處理規則
    #------------------------------------------------------------------
    - derive/6/7/
    - derive/uih/ueh/
    - derive/ou/oo/
    - derive/eru/ou/
    - derive/er/o/
    - derive/ui/ue/
    - derive/ee/e/
    - derive/ur/u/
    # 泉州腔 ir
    - derive/ir/u/
    - derive/ir/i/
    # 
    - derive/er(ng|k)/i$1/
    #------------------------------------------------------
    # 設定讀取 ‘字典’ 漢字拼音的 ‘解析格式'
    #------------------------------------------------------
    - derive/^([a-z]+)\d$/$1/
    #------------------------------------------------------
    # 定義：聲母簡拼
    #------------------------------------------------------
    # 可以只用【聲母】音標找漢字
    - abbrev/^([pbmtnlkgcjsh])([^hg]).+$/$1/
    #------------------------------------------------------
    # 定義聲調的「調號」與「按鍵」的對映規則
    #------------------------------------------------------
    - 'xform 1 ;'
    - 'xform 2 \\'
    - 'xform 3 <'
    - 'xform 4 \['
    - 'xform 5 /'
    - 'xform 6 9'
    - 'xform 7 -'
    - 'xform 8 \.'

translator:
  dictionary: tlpa_ji_khoo_peh_ue
  prism: tlpa_peh_ue
  spelling_hints: 5
  preedit_format:
    #------------------------------------------------------
    # 鼻化符號以 ‘上標n’ 顯示
    #------------------------------------------------------
    - xform/nn(h?)(\d|\>)/$1ⁿ$2/
    #------------------------------------------------------
    # 定義 ‘調號’ 的 '對映規則'
    #------------------------------------------------------
    - 'xform ; 1'
    - 'xform \\ 2'
    - 'xform < 3'
    - 'xform \[ 4'
    - 'xform / 5'
    - 'xform 9 6'
    - 'xform - 7'
    - 'xform \. 8'
  comment_format:
    - xform/^Ø([a-z]+\d)$/$1/
    #------------------------------------------------------
    # 鼻化符號以 ‘上標n’ 顯示
    #------------------------------------------------------
    - 'xform/(nn)(h?)(\d)/ⁿ$2$3/'
    #------------------------------------------------------
    # 定義 ‘調號’ 的 '對映規則'
    # - xlit|012345678|⁰¹²³⁴⁵⁶⁷⁸|
    - 'xform 0 ⁰'
    - 'xform 1 ¹'
    - 'xform 2 ²'
    - 'xform 3 ³'
    - 'xform 4 ⁴'
    - 'xform 5 ⁵'
    - 'xform 6 ⁶'
    - 'xform 7 ⁷'
    - 'xform 8 ⁸'

reverse_lookup:
  dictionary: luna_pinyin
  prefix: "`"
  tips: 〔拼音〕
  preedit_format:
    - xform/([nljqxy])v/$1ü/

key_binder:
  # import_preset: default
  bindings:
    - { when: has_menu, accept: minus, send: minus }      # ｎ
    - { when: composing, accept: minus, send: minus }     # 確保 `-` 鍵用於聲調 7
    #---------------------------------------------------
    - { when: composing, accept: period, send: period }   # 確保 `.` 鍵用於調號 8
    - { when: has_menu, accept: period, send: period }    # 確保 `.` 鍵用於調號 8
    - { when: has_menu, accept: period, send: period }	  # 確保 `.` 鍵不用于翻頁
    #---------------------------------------------------
    # 翻頁
    # - { accept: comma, send: Page_Up, when: has_menu }         # 選下一個字
    # - { accept: period, send: Page_Down, when: has_menu }      # 選上一個字
    - { accept: "Control+p", send: Page_Up, when: composing }
    - { accept: "Control+n", send: Page_Down, when: composing }
    #---------------------------------------------------
    # Vim Mode
    #---------------------------------------------------
    - { when: has_menu, accept: "Control+h", send: Page_Up }
    - { when: has_menu, accept: "Control+l", send: Page_Down }
    - { when: has_menu, accept: "Control+k", send: Up }
    - { when: has_menu, accept: "Control+j", send: Down }
    #---------------------------------------------------

editor:
  bindings:
    space: commit                       # 選擇「備選漢字」
    Return: commit_composition          # 上屏原始的輸入：lau5
    Control+Return: commit_script_text  # 上屏顯示的輸入：lau⁵ / lâu
    Shift+Return: commit_comment        # 上屏候選項備注：ㄉㄚ˪〖柳交五〗

punctuator:
  import_preset: default

recognizer:
  import_preset: default
  patterns:
    reverse_lookup: "`[a-z]*$"

menu:
  # alternative_select_labels: [Ａ, Ｂ, Ｃ, Ｄ, Ｅ, Ｆ, Ｇ, Ｈ, Ｉ, Ｊ]
  # alternative_select_keys: "ABCDEFGHIJ"
  alternative_select_labels: [ ①, ②, ③, ④, ⑤ ]  # 修改候選標籤
  page_size: 5 #選單每䈎顯示個數

style:
  horizontal: false
